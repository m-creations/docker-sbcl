#!/bin/bash

# set -x

IFS=':' read -ra user_group <<< "$RUN_AS"

userid=${user_group[0]}

# Add the user, if s/he does not exist (we alway use group 0 = root)

if ! id -nu $userid &> /dev/null ; then
    useradd -g 0 -u $userid -m lisp
fi

# create .sbclrc
cat <<EOF > /home/lisp/.sbclrc
(require 'asdf)

(push "node_modules" asdf/source-registry:*default-source-registry-exclusions*)

#-quicklisp
(load "/opt/quicklisp/setup.lisp")

(when (sb-posix:getenv "QL_VERBOSE")
  (setf quicklisp:*quickload-verbose* t))
EOF

# we split the command line options into runtime, toplevel and user options

runtime=()
toplevel=()
user=()

if [ $# -gt 0 ] ; then
  push_runtime=0
  push_toplevel=0
  if [[ "$1" == "---" ]] ; then
    shift
    printf "\nNot starting SBCL but running your command after '---':\n\n"
    echo "$@"
    echo
    exec gosu $userid:0 "$@"
    exit $?
  fi

  for a in "$@"; do
      if [[ $push_runtime == 1 ]] ; then
        # the current $a belongs to a previous option and is pushed onto the runtime array
        runtime=("${runtime[@]}" "$a")
        push_runtime=0
        continue
      elif [[ $push_toplevel == 1 ]] ; then
        # the current $a belongs to a previous option and is pushed onto the toplevel array
        # --script has an optional filename, so if the next arg is an option, we have to
        # process it normally
        if [[ $a =~ ^-- ]] ; then
          echo "script followed by an option $a"
        else
          toplevel=("${toplevel[@]}" "$a")
          push_toplevel=0
          continue
        fi
      fi
      case "$a" in
          --help) runtime=("${runtime[@]}" "$a") ;;
          --version) runtime=("${runtime[@]}" "$a") ;;
          --core) runtime=("${runtime[@]}" "$a") ; push_runtime=1 ;;
          --dynamic-space-size) runtime=("${runtime[@]}" "$a") ; push_runtime=1 ;;
          --control-stack-size) runtime=("${runtime[@]}" "$a") ; push_runtime=1 ;;
          --sysinit) toplevel=("${toplevel[@]}" "$a") ; push_toplevel=1 ;;
          --userinit) toplevel=("${toplevel[@]}" "$a") ; push_toplevel=1 ;;
          --no-sysinit) toplevel=("${toplevel[@]}" "$a") ;;
          --no-userinit) toplevel=("${toplevel[@]}" "$a") ;;
          --disable-debugger) toplevel=("${toplevel[@]}" "$a") ;;
          --noprint) toplevel=("${toplevel[@]}" "$a") ;;
          --script) toplevel=("${toplevel[@]}" "$a") ; push_toplevel=1 ;;
          --quit) toplevel=("${toplevel[@]}" "$a") ;;
          --non-interactive) toplevel=("${toplevel[@]}" "$a") ;;
          --eval) toplevel=("${toplevel[@]}" "$a") ; push_toplevel=1 ;;
          --load) toplevel=("${toplevel[@]}" "$a") ; push_toplevel=1 ;;
          *) user=("${user[@]}" "$a") ;;
      esac
  done
fi

# Use readline wrapper but test first, if it can run
RLWRAP=rlwrap

$RLWRAP echo

if [ "$?" != "0" ] ; then
    unset RLWRAP
fi

exec gosu $userid:0 $RLWRAP sbcl-binary "${runtime[@]}" --load /opt/quicklisp/setup.lisp "${toplevel[@]}" "${user[@]}"
